둘 이상의 스레드가 공유데이터에 접근할 수 있고 동시에 변경하려고 할 때 발생한다.

해결방법
메서드에 synchronized를 붙여주게 되면 해당 메서드엔 한 개의 스레드만 접근 가능하게 된다.


그러나!
여기서도 문제가 발생할 수 있다. 스프링 트랜잭션(@Transactional) 어노테이션을 사용한다면 
모든 메서드가 끝나야 종료하게 된다. 


해결방법 
@Transactional 어노테이션을 주석처리해준다.


그러나!
synchronized에서도 문제가 발생할 수 있다. 서버가 1대면 문제가 없는데 2대 이상일 경우
여러 스레드에서 동시에 접근하여 race condition이 발생할 수 있다.
그래서 실무에선 synchronzied를 거의 사용하지 않는다.
